-->java.util.Queue interface is a subtype of java.util.Collection interface.
-->Just like a real-world queue (for instance, in a bank or at ATM), Queue inserts elements at the end of the queue and removes from the beginning of the queue.
-->Java Queue represents an ordered list of elements.
-->Java Queue follows FIFO order to insert and remove itâ€™s elements. FIFO stands for First In First Out.
-->Java Queue supports all methods of Collection interface.
-->Most frequently used Queue implementations are LinkedList, ArrayBlockingQueue and PriorityQueue.
-->BlockingQueues do not accept null elements. If we perform any null related operation, it throws NullPointerException.
-->BlockingQueues are used to implement Producer/Consumer based applications.
-->BlockingQueues are thread-safe.
-->All Queues which are available in java.util package are Unbounded Queues and Queues which are available in java.util.concurrent package are Bounded Queues.
-->All Deques are not thread-safe.
-->ConcurrentLinkedQueue is an unbounded thread-safe Queue based on linked nodes.
-->All Queues supports insertion at the tail of the queue and removal at the head of the queue, except Deques.
-->Deques are queues but they support element insertion and removal at both ends.